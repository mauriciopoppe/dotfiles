#!/bin/zsh

dotfiles-help() {
cat << EOF

  usage: dotfiles [installer|essential|complete]

    [installer]
      One of: zsh|neovim|tmux|applications|brew|node|git|python|alfred

    [essential]
      zsh + antigen
      tmux + tpm
      nvim + vim-plug

    [complete]
      All the installers listed above

EOF
}

dotfiles-temp-fix-path() {
  # it's possible that brew is already installed but the path is not set correctly
  # fix the path for the current script
  if [[ ! $PATH == *"/usr/local/bin"* ]]; then
    path=(/usr/local/bin $path)
    export PATH
  fi

  path=(${DOTFILES_DIRECTORY}/bin $path)
}

dotfiles-pre() {
  dotfiles-temp-fix-path

  if ! command-exists "gcc"; then
    print-error "The XCode Command Line Tools must be installed first."
    printf "  Download them from: https://developer.apple.com/downloads\n"
    printf "  Or install them with: xcode-select --install\n"
    exit 1
  fi

  # install brew
  if ! command-exists "brew"; then
    print-header "Installing Homebrew..." 
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
}

dotfiles-essential() {
  zsh tmux/install.zsh
  zsh neovim/install.zsh
  zsh zsh/install.zsh
}

dotfiles-complete() {
  dotfiles-essential

  zsh git/install.zsh
  zsh brew/install.zsh
  zsh applications/install.zsh
  zsh node/install.zsh
  zsh python/install.zsh

  # neovim is recommended
  zsh vim/install.zsh

  # workflows
  zsh alfred/install.zsh
}

dotfiles-main() {
  local cmd=$1

  if [[ -z $DOTFILES_DIRECTORY ]]; then
    echo "dotfiles: DOTFILES_DIRECTORY is not set, execute 'source install.zsh' on the dotfiles directory"
    exit 1
  fi

  cd $DOTFILES_DIRECTORY
  source lib/utils

  # check that brew exists
  dotfiles-pre

  if [[ -z $cmd ]] || [[ $cmd == "--help" ]]; then
    dotfiles-help
  elif [[ -e $cmd/install.zsh ]]; then
    shift
    zsh $cmd/install.zsh $@
  elif functions "dotfiles-${cmd}" > /dev/null; then
    shift
    "dotfiles-${cmd}" $@
  else
    dotfiles-help
  fi
}

dotfiles-main $@

