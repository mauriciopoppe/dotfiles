#!/usr/bin/env ruby
#
# NOTE: requires the installation of the binary `bookmark`, it should be under zsh/bin

require 'pathname'

# Algorithm:
# - get saved sessions (from the file ~/.bookmarks.data)
# - get opened sessions (with tmux-list-session)
# - create a list with unique items from both lists (sorted)
# - ask to switch session with fzf
# - switch session

# NOTE: special chars replaced both here and in ~/.tmuxinator.yml
ESCAPE_BOOKMARK_CHARS = [
  # NOTE: if you change these characters also change zsh/bin/bookmark
  # NOTE: if you change these characters also change tmux/default-tmuxinator.yaml
  [".", "·"],
  [Dir.home, "¬"],
]

def escape_session_name(v)
  ESCAPE_BOOKMARK_CHARS.each do |transform|
    v = v.gsub(transform[0], transform[1])
  end
  v
end

def unescape_session_name(v)
  ESCAPE_BOOKMARK_CHARS.each do |transform|
    v = v.gsub(transform[1], transform[0])
  end
  v
end

def format_session(name, opened)
  name = escape_session_name(name)
  format('%3s | %s', opened ? '*' : ' ', name)
end

def find_closest_tmuxinator_file(path)
  pn = Pathname.new(path)
  until pn.root?
    return pn if File.exist?(pn + '.tmuxinator.yml')
    pn = pn.parent
  end
  fail("Couldn't file a .tmuxinator.yml file anywhere in the tree")
end

def main()

  # list of sessions to display
  unique = []

  # push opened sessions as: [name] *
  opened_tmux_sessions =
    `tmux list-sessions -F "\#{session_name}"`.strip.split("\n").sort!
  opened_tmux_sessions.each do |item|
    unique << "#{format_session(item, true)}"
  end

  # push sessions obtained from the `bookmark` bash script
  all_bookmarks = `bookmark --list --strip-homedir`.strip.split("\n").sort!
  all_bookmarks.each do |bookmark|
    # only push if it's not opened (if it's opened then it was pushed before)
    formatted_bookmark = escape_session_name(bookmark)
    if opened_tmux_sessions.index(formatted_bookmark).nil?
      unique << "#{format_session(formatted_bookmark, false)}"
    end
  end

  # call fzf with the sessions
  chosen = `echo "#{unique.join("\n")}" | fzf-tmux -d 15`

  exit 0 if chosen.length <= 0

  # change session
  c_opened, c_name = chosen.split(' | ').map(&:strip)
  if c_opened.length > 0
    `tmux switch-client -t "#{c_name}"`
  else
    # replace special escape with .
    c_name_formatted = unescape_session_name(c_name)
    puts c_name_formatted

    # find closest .tmuxinator.yml file and symlink it if needed
    closest_dir = find_closest_tmuxinator_file(c_name_formatted)
    needs_symlink = !(closest_dir.to_s.eql? c_name_formatted)

    closest_dir.nil? && fail(".tmuxinator.yml file not found in ancestors of #{c_name_formatted}")

    system("ls '#{c_name_formatted}' > /dev/null") ||
      fail("bookmark #{c_name_formatted} doesn't exist")

    # create symlink to parent dir
    if needs_symlink
      `cd "#{c_name_formatted}" && ln -s '#{File.join(closest_dir, '.tmuxinator.yml')}' .tmuxinator.yml`
    end

    system("cd '#{c_name_formatted}' && ls .tmuxinator.* > /dev/null 2>&1") ||
      fail("#{c_name_formatted} doesn't contain a .tmuxinator file")

    `cd '#{c_name_formatted}' && tmuxinator start .`

    if needs_symlink
      `cd '#{c_name_formatted}' && trash .tmuxinator.yml`
    end
  end
end

main

# vim: set ft=ruby
