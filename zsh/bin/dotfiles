#!/bin/zsh
# set -o xtrace

#      _       _    __ _ _
#   __| | ___ | |_ / _(_) | ___  ___
#  / _` |/ _ \| __| |_| | |/ _ \/ __|
# | (_| | (_) | |_|  _| | |  __/\__ \
#  \__,_|\___/ \__|_| |_|_|\___||___/
#
# Mauricio Poppe <mauricio.poppe@gmail.com>
if [[ -z $DOTFILES_DIRECTORY ]]; then
  echo "dotfiles: DOTFILES_DIRECTORY is not set, execute 'source install.zsh' on the dotfiles directory"
  exit 1
fi

source $DOTFILES_DIRECTORY/zsh/lib/print
source $DOTFILES_DIRECTORY/zsh/lib/utils
source $DOTFILES_DIRECTORY/zsh/lib/macos-utils

dotfiles-help() {
cat << EOF

  usage: dotfiles [<package>|essential]

    [<package>]

      ( basic )
        zsh|neovim|tmux

      ( tools )
        git|ctags|sshrc

      ( macOS specific )
        @macos/default|@macos/alfred|@macos/iTerm2|homebrew

      ( Programming languages )
        nodejs|ruby|python|go

    [essential]
      zsh
      tmux
      neovim (requires pip)

  Examples:

      dotfiles zsh
      dotfiles nodejs
      dotfiles essential

EOF
}

dotfiles-temp-fix-path() {
  # it's possible that brew is already installed but the path is not set correctly
  # fix the path for the current script
  if [[ `uname` == "Linux" ]]; then
    if [[ ! $PATH == *"$HOME/.linuxbrew/bin"* ]]; then
      path=($HOME/.linuxbrew/bin $path)
    fi
  fi
  if [[ `uname` == "Darwin" ]]; then
    if [[ ! $PATH == *"/usr/local/bin"* ]]; then
      path=(/usr/local/bin $path)
    fi
  fi
  path=(${DOTFILES_DIRECTORY}/bin $path)
}

dotfiles-check-versions() {
  gv=`git --version | awk '{print $3}'`
  # https://stackoverflow.com/questions/41274926/comparing-version-strings-in-zsh
  if [ -z "$CI" ]; then
    if ! is-at-least "2.15.0" $gv; then
      print-error "git +2.15 required"
      exit 1
    fi
  fi
}

dotfiles-pre() {
  dotfiles-temp-fix-path
  dotfiles-check-versions

  if ! command-exists "gcc"; then
    print-error "The XCode Command Line Tools must be installed first."
    printf "  Download it from: https://developer.apple.com/downloads\n"
    printf "  Or install it with: xcode-select --install\n"
    exit 1
  fi

  # homebrew
  if [[ $OSTYPE =~ ^darwin ]]; then
    if ! command-exists "brew"; then
      print-header "Installing Homebrew..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      echo "eval $($HOME/.linuxbrew/bin/brew shellenv)" >> $HOME/.zprofile
    fi
  fi
}

-dotfiles-install-single() {
  cmd=$1
  full=$DOTFILES_DIRECTORY/$1
  shift
  if [[ -e $cmd/install.zsh ]]; then
    cat $cmd/install.zsh
    if read -q "choice?Press Y/y to continue with install: "; then
      source $cmd/install.zsh $@
    else
      echo
      echo "Exiting..."
    fi
  fi
}

-dotfiles-install() {
  for i in $@; do
    -dotfiles-install-single $i
  done
}

dotfiles-essential() {
  local list
  list=(zsh tmux neovim)
  -dotfiles-install ${list}
}

dotfiles-main() {
  local cmd=$1

  cd $DOTFILES_DIRECTORY

  dotfiles-pre

  if [[ -z $cmd ]] || [[ $cmd == "--help" ]]; then
    dotfiles-help
  elif [[ -e $cmd ]]; then
    # invoke install.zsh on requested dir
    # shift
    -dotfiles-install-single $@
    # "dotfiles-install" ${cmd} $@
    # source $cmd/install.zsh $@
  elif functions "dotfiles-${cmd}" > /dev/null; then
    shift
    "dotfiles-${cmd}" $@
  else
    dotfiles-help
  fi
}

dotfiles-main $@

