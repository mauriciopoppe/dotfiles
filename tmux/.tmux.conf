# Awesome tmux.conf files
#
# - Nick Nisi: https://github.com/nicknisi/dotfiles/blob/master/tmux/tmux.conf.symlink
# - Bruno Sutic: https://github.com/bruno-/dotfiles/blob/master/home/.tmux.conf
#
# Hierarchy:
#  Server
#  `Session
#    `Window
#      `Pane

###################
# General options #
###################

# Make sure that this is a symlink to the actual zsh binary
# I had to make this workaround because at work zsh is located somewhere else
# - In my personal laptop it's a symlink to the homebrew zsh installation
# - At work it's a symlink to work's zsh location
set-option -g default-shell $SHELL
set-option -g default-command $SHELL

# I enabled italics following this guide https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
# Make sure that:
# - outside tmux (in the terminal) `echo $TERM` is tmux-256color, I restarted iTerm or this to work
# - inside tmux `echo $TERM` is tmux-256color
# - if there are changes to these values restart tmux!
set-option -g default-terminal 'tmux-256color'
set -as terminal-overrides ',tmux*:Tc:RGB'
set -as terminal-features ',tmux*:clipboard'

set -s set-clipboard on

# remap prefix to <C-space>
unbind-key c-b
set-option -g prefix C-space

# make window/pane index start with 1
set -g base-index 1
set -g pane-base-index 1

# forward events to the editor to trigger autosave
set -s focus-events on

# mouse click changes the focused pane
setw -g mouse on
setw -g mode-keys vi
set -g @yank_with_mouse on
set -g @yank_action 'copy-pipe'
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"\; display-message "copied to system clipboard"
# bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
setw -g xterm-keys on

# avoids renaming the window with the current pane process/path
set -g allow-rename off


# clipboard integration fix for macOS Sierra
# http://stackoverflow.com/questions/39645253/clipboard-failure-in-tmux-vim-after-upgrading-to-macos-sierra
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

################
# Key bindings #
################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n 'C-h' if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n 'C-j' if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n 'C-k' if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n 'C-l' if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\\ select-pane -l

# Switch session (prefix + j)
# SWITCH_SESSION="tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
SWITCH_SESSION="tmux-switch-client 2>&1"
bind C-[ switch-client -p
bind C-] switch-client -n
# bind C-j split-window -v $SWITCH_SESSION
# bind j split-window -v $SWITCH_SESSION
bind C-j run-shell -b $SWITCH_SESSION
bind j   run-shell -b $SWITCH_SESSION
bind C-f resize-pane -Z

unbind C-z

# Pane creation
bind - split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
# reset default for split vertically and horizontally
unbind '"'
unbind %

# <prefix> + <
# <prefix> + >
# swap windows
bind -r "<" swap-window -t -1
bind -r ">" swap-window -t +1

# <prefix> + R
# Reload config, set in tmux-sensible

# <prefix> + space:
# Switch between this session and the last one
bind Space switch-client -l

################
# tmux plugins #
################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'Morantron/tmux-fingers'

# # Initialize tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'

#########
# theme #
#########

run-shell ${DOTFILES_DIRECTORY}/tmux/tmux-theme.sh

# vim: ft=tmux.conf
